name: Android CI (main branch)

on:
  push:
    branches: [main]
    tags:
        - 'v*'
  pull_request:
    branches: [main]


jobs:

  checkstyle_job:
    name: Check code with checkstyle
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Run gradle checkstyle tasks
        run: ./gradlew checkstyle --stacktrace
        # The task "checkstyle" is specified in the app/build.gradle file.

  test_job:
    name: Run UI and Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Run test task
        run: ./gradlew test --stacktrace
        # "./gradlew build" and "check" would run more tasks. "./gradlew test" runs the tests located
        # in the app/src/androidTest and app/src/test directories (https://developer.android.com/studio/test).
        # TO DO: Use the Espresso Framework for automated UI-Testing.
        # (https://developer.android.com/training/testing/espresso/setup)

  apk_job:
    name: Generate and upload the APK
    runs-on: ubuntu-latest
    needs:
      - checkstyle_job
      - test_job
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Build APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: apk
          path: app/build/outputs/apk/debug/app-debug.apk
        # The debugAPK is also included in the vcs at the moment. We might create and upload the
        # releaseAPK here instead.

  release_job:
    name: Release the APK
    needs: apk_job
    if: startsWith(github.ref, 'refs/tags/v')
    # The "release_job" is only executed if the push or pull_request event includes a version number as a tag.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Build APK
        run: ./gradlew assembleRelease --stacktrace       


      - name: Sign artifact
        uses: r0adkll/sign-android-release@v1.0.4
        with:
          releaseDirectory: app\build\outputs\apk\release
          alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Create a Release on Github
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

      - name: Upload the (debug) APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app\build\outputs\apk\release\app-release-unsigned-signed.apk
          asset_name: VP-Manager_release.apk
          asset_content_type: application/zip
